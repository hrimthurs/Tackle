/* @hrimthurs/tackle 1.31.2 https://github.com/hrimthurs/Tackle @license MIT */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).TkArray={})}(this,(function(e){"use strict";function n(e,n=!1){let r=Array.isArray(e)?[...e]:null!=e?[e]:[];return n?t(r):r}function t(e,n=!1){let t=[...new Set(e)];return n&&(e=t),t}function r(e,...n){return n.forEach((([n,t])=>{e[n]=e.splice(t,1,e[n])[0]})),e}function u(e,t,r=!1){let u=n(t),l=e.filter((e=>!u.includes(e)));return r&&(e=l),l}function l(e,n=!1){let t=e.sort(((e,n)=>e.localeCompare(n)));return n&&(e=t),t}function o(e,n=Math.random()){const t=function(e=1,n=null){const t=2147483647,r=1e5,u=n?.min?n.min-1:0,l=(n?.max??r)-u+1;let o=e%t;return function(e=null){if(o=48271*o%t,e){const n=e.min?e.min-1:0,t=(e.max??r)-n+1;return Math.trunc(o%t+n)}{const e=o%l+u;return n?Math.trunc(e):e/r}}}(n);for(let n=e.length-1;n>0;n--){const r=t({max:n+1});[e[n],e[r]]=[e[r],e[n]]}return e}function a(e,n,t=!1){return(t?e.length==n.length:e.length<=n.length)&&e.every((e=>n.includes(e)))}function i(e,n){return e[n>0?n-1:e.length-1]}function c(e,n){return e[n<e.length-1?n+1:0]}new Array(256).fill(0).map(((e,n)=>(n<16?"0":"")+n.toString(16)));var f={getArray:n,getUniqValues:t,swapValues:r,excludeValues:u,sortArrayStr:l,shuffleRandom:o,isSubArray:a,prevValueCycle:i,nextValueCycle:c};e.default=f,e.excludeValues=u,e.getArray=n,e.getUniqValues=t,e.isSubArray=a,e.nextValueCycle=c,e.prevValueCycle=i,e.shuffleRandom=o,e.sortArrayStr=l,e.swapValues=r,Object.defineProperty(e,"__esModule",{value:!0})}));
