/* @hrimthurs/tackle 1.19.1 https://github.com/hrimthurs/Tackle @license MIT */
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((n="undefined"!=typeof globalThis?globalThis:n||self).TkMath={})}(this,(function(n){"use strict";const t=Math.PI/2,e=Math.PI/4,o=Math.PI/180;function i(n,t){return n.x*t.x+n.y*t.y}function r(n,t){return n.x*t.y-n.y*t.x}function s(n,t){return{x:n.x-t.x,y:n.y-t.y}}function u(n,t){const e=s(t,n);return Math.sqrt(e.x**2+e.y**2)}function y(n,t){const e=s(t,n);return Math.abs(e.x)+Math.abs(e.y)}function c(n,t,e,o=1.2){let i=!1;const r=s(t,n),u=r.x**2+r.y**2;if(0!==u){const s=((e.x-n.x)*r.x+(e.y-n.y)*r.y)/u;if(s<0)i=Math.sqrt((n.x-e.x)**2+(n.y-e.y)**2)<=o;else if(s>1)i=Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2)<=o;else{const t=((n.y-e.y)*r.x-(n.x-e.x)*r.y)/u;i=Math.abs(t)*Math.sqrt(u)<=o}}return i}function f(n,t){let e=!1;for(let o=0,i=t.length-1;o<t.length;i=o++){const r=t[o],s=t[i];r.y>n.y!=s.y>n.y&&n.x<(s.x-r.x)*(n.y-r.y)/(s.y-r.y)+r.x&&(e=!e)}return e}function a(n,t,e,o){let i=null;if(n&&t&&e&&o){const u=s(n,t),y=s(o,e),c=r(u,y);if(0!==c){const n=s(o,t);i={Ua:r(n,y)/c,Ub:r(u,n)/c}}}return i}function x(n){return n&&n.Ua>=0&&n.Ua<=1&&n.Ub>=0&&n.Ub<=1}function l(n,t,e){return{x:t.x*n.Ua+e.x*(1-n.Ua),y:t.y*n.Ua+e.y*(1-n.Ua)}}var d={HALF_PI:t,QUART_PI:e,angleDegToRad:function(n=0){return Number(n)*o},roundFloat:function(n,t=3){return Number(n.toFixed(t))},dotProduct2D:i,crossProduct2D:r,delta2D:s,midPoint2D:function(n,t){return{x:(n.x+t.x)/2,y:(n.y+t.y)/2}},isEqualCoords2D:function(n,t,e=.1){const o=s(t,n);return Math.abs(o.x)<e&&Math.abs(o.y)<e},dist2D:u,distManhattan2D:y,isNearerFirstPt2D:function(n,t,e){return y(e,n)<y(e,t)},pointOnLineByLen2D:function(n,t,e){const o=s(t,n),i=e/(u(n,t)||1);return{x:n.x+o.x*i,y:n.y+o.y*i}},projectPointToStraightLine2D:function(n,t,e){const o=s(t,n),r=i(s(e,n),o)/i(o,o);return{x:n.x+o.x*r,y:n.y+o.y*r}},isPointBelongStraightLine2D:function(n,t,e,o=1.2){const i=s(t,n),u=r(i,s(e,n)),y=Math.sqrt(i.x**2+i.y**2);return Math.abs(u/y)<=o/2},isPointBelongLineSegment2D:c,isSomePointBelongLineSegment2D:function(n,t,e,o=1.2){return e.some((e=>c(n,t,e,o)))},isEveryPointBelongLineSegment2D:function(n,t,e,o=1.2){return e.every((e=>c(n,t,e,o)))},isPointInsidePolygon2D:f,isSomePointInsidePolygon2D:function(n,t){return n.some((n=>f(n,t)))},isEveryPointInsidePolygon2D:function(n,t){return n.every((n=>f(n,t)))},crossStraightLines2D:function(n,t,e,o){const i=a(n,t,e,o);if(i)return l(i,n,t)},crossLinesSegments2D:function(n,t,e,o){const i=a(n,t,e,o);if(x(i))return l(i,n,t)},isCrossLinesSegments2D:function(n,t,e,o){return!0===x(a(n,t,e,o))}};n.default=d,Object.defineProperty(n,"__esModule",{value:!0})}));
